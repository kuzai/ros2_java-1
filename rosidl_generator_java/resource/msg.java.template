/* Generated Message class from rosidl_generator_java */
package @(package_name).@(subfolder);

// IMPORTS
import org.ros2.rosidl_generator_java.RCLJavaProxy;
import org.ros2.rcljava.internal.message.Message;

@[for field in spec.fields]@
@[    if not field.type.is_primitive_type()]@
@[        if ((field.type.pkg_name != spec.base_type.pkg_name) or (subfolder == 'srv'))]@
import @(field.type.pkg_name).msg.@(field.type.type);
@[        end if]@
@[    end if]@
@[end for]@

/**
 * @(type_name) java message for ROS2(idl).
 */
public class @(type_name) implements Message {
    /** AutoLoader JNI library. */
    static {
        RCLJavaProxy.loadLibrary("@(spec.base_type.pkg_name)_@(type_name)_s__" + RCLJavaProxy.getTypesupportIdentifier());
    }

    // NATIVES
    public static native long getFromJavaConverter();
    public static native long getToJavaConverter();
    public static native long getTypeSupport();

    // CONSTANTS
@[for constant in spec.constants]@
    public static final @(get_builtin_java_type(constant.type)) @(constant.name) = @(constant_value_to_java(constant.type, constant.value));
@[end for]@

@{
def upperfirst(s):
    return s[0].capitalize() + s[1:]
}@

    // FIELDS
@[for field in spec.fields]@
@[    if field.type.is_array]@
    /** List of @(field.name). */
    private java.util.List<@(get_java_type(field.type, use_primitives=False))> @(field.name);

    /**
     * @(upperfirst(field.name)) setter.
     * @@param @(field.name)
     */
    public void set@(upperfirst(field.name))(java.util.Collection<@(get_java_type(field.type, use_primitives=False))> @(field.name)) {
        if (@(field.name) != null) {
            this.@(field.name) = new java.util.ArrayList<@(get_java_type(field.type, use_primitives=False))>(@(field.name));
        }
    }

    /**
     * @(upperfirst(field.name)) getter.
     * @@return @(get_java_type(field.type, use_primitives=False))
     */
    public java.util.List<@(get_java_type(field.type, use_primitives=False))> get@(upperfirst(field.name))() {
        if (this.@(field.name) == null) {
            return null;
        }
        return new java.util.ArrayList<@(get_java_type(field.type, use_primitives=False))>(this.@(field.name));
    }
@[    else]@
    /** @(field.name) field. */
    private @(get_java_type(field.type)) @(field.name);

    /**
     * @(upperfirst(field.name)) setter.
     * @@param @(field.name)
     */
    public void set@(upperfirst(field.name))(@(get_java_type(field.type)) @(field.name)) {
        this.@(field.name) = @(field.name);
    }

    /**
     * @(upperfirst(field.name)) getter.
     * @@return @(get_java_type(field.type))
     */
    public @(get_java_type(field.type)) get@(upperfirst(field.name))() {
        return this.@(field.name);
    }
@[    end if]@

@[end for]@
}
